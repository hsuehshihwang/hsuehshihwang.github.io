<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://hsuehshihwang.github.io//feed.xml" rel="self" type="application/atom+xml" /><link href="https://hsuehshihwang.github.io//" rel="alternate" type="text/html" /><updated>2021-08-11T16:23:03+08:00</updated><id>https://hsuehshihwang.github.io//feed.xml</id><title type="html">Hsueh-Shih’s Blog</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Buildroot 筆記</title><link href="https://hsuehshihwang.github.io//2021/08/11/Buildroot-%E7%AD%86%E8%A8%98.html" rel="alternate" type="text/html" title="Buildroot 筆記" /><published>2021-08-11T16:05:00+08:00</published><updated>2021-08-11T16:05:00+08:00</updated><id>https://hsuehshihwang.github.io//2021/08/11/Buildroot%20%E7%AD%86%E8%A8%98</id><content type="html" xml:base="https://hsuehshihwang.github.io//2021/08/11/Buildroot-%E7%AD%86%E8%A8%98.html">&lt;h1 id=&quot;介紹&quot;&gt;介紹&lt;/h1&gt;

&lt;p&gt;Buildroot是一簡化且自動化處理產生corss-compilation toolchain, root filesystem, Linux Kernel, bootloader的工具，便於開發embedded system。&lt;/p&gt;

&lt;p&gt;Host: 主機、宿主，一般而言就是我們的PC、Notebook
Target: 目標設備&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;安裝buildroot必須的packages&quot;&gt;安裝Buildroot必須的packages:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Build tools:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;which&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sed&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make&lt;/code&gt; (version 3.81 or any later)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;binutils&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build-essential&lt;/code&gt; (only for Debian based systems)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gcc&lt;/code&gt; (version 2.95 or any later)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;g++&lt;/code&gt; (version 2.95 or any later)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bash&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;patch&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gzip&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bzip2&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;perl&lt;/code&gt; (version 5.8.7 or any later)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tar&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cpio&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; (version 2.6 or any later)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unzip&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rsync&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file&lt;/code&gt; (must be in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/bin/file&lt;/code&gt;)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bc&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Source fetching tools:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;可選是否要安裝的packages&quot;&gt;可選是否要安裝的packages:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ncurses5&lt;/code&gt; to use the &lt;em&gt;menuconfig&lt;/em&gt; interface&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;qt4&lt;/code&gt; to use the &lt;em&gt;xconfig&lt;/em&gt; interface(sudo apt-get install qt4-qmake libqt4-dev)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;glib2&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gtk2&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;glade2&lt;/code&gt; to use the &lt;em&gt;gconfig&lt;/em&gt; interface&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Source fetching tools:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bazaar&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cvs&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mercurial&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rsync&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scp&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;subversion&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Java-related packages:
    &lt;ul&gt;
      &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;javac&lt;/code&gt; compiler&lt;/li&gt;
      &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jar&lt;/code&gt; tool&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Documentation generation tools:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;asciidoc&lt;/code&gt;, version 8.6.3 or higher&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;w3m&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;argparse&lt;/code&gt; module (automatically present in 2.7+ and 3.2+)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dblatex&lt;/code&gt; (required for the pdf manual only)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Graph generation tools:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;graphviz&lt;/code&gt; to use &lt;em&gt;graph-depends&lt;/em&gt; and *&lt;pkg&gt;-graph-depends*&lt;/pkg&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python-matplotlib&lt;/code&gt; to use &lt;em&gt;graph-build&lt;/em&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;空間夠的話，建議全部一起安裝，例如git或graphviz(make graph-depends時會用到)又或python都很常用。&lt;/p&gt;

&lt;h2 id=&quot;quick-start&quot;&gt;Quick Start:&lt;/h2&gt;

&lt;p&gt;首先我們需要產生一個 &lt;strong&gt;.config&lt;/strong&gt;檔，可使用下面四種指令，用圖形化的視窗來設定:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;make menuconfig最基本也是最多人用的&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;make nconfig 新的圖形介面&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;make xconfig Qt-based的圖形介面&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;make gconfig GTK-based的圖形介面&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;只是畫面不同，重點在設定完，會在目前目錄下(也就是top-level的目錄)產生一個&lt;strong&gt;.config&lt;/strong&gt;檔(隱藏檔)，這裡面有你設定好的設定，之後也可直接更改此檔來做設定。設定完後下make，沒意外的話，一切就會自動完成。&lt;/p&gt;

&lt;p&gt;要注意的是，這裡不能在top-level資料夾下 make -jN的指令，一般我們會在4核下的cpu 裡下make -j8來進行多工的處理，可是Buildroot不支援在top-level的並行處理。取而代之的是使用BR2_JLEVEL。這選項告訴Buildroot在每個獨立的package裡下make -jN，例如修改&lt;strong&gt;.config&lt;/strong&gt;的BR2_JLEVEL=8。&lt;/p&gt;

&lt;h3 id=&quot;make的流程&quot;&gt;make的流程:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;download source files (as required);&lt;/li&gt;
  &lt;li&gt;configure, build and install the cross-compilation toolchain, or simply import an external toolchain;&lt;/li&gt;
  &lt;li&gt;configure, build and install selected target packages;&lt;/li&gt;
  &lt;li&gt;build a kernel image, if selected;&lt;/li&gt;
  &lt;li&gt;build a bootloader image, if selected;&lt;/li&gt;
  &lt;li&gt;create a root filesystem in selected formats.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最後結果輸出在output資料夾。&lt;/p&gt;

&lt;h3 id=&quot;output資料夾內容&quot;&gt;output資料夾內容:&lt;/h3&gt;

&lt;p&gt;images =&amp;gt; kernel image,bootloader, root filesystem images等等&lt;/p&gt;

&lt;p&gt;build =&amp;gt; 所有下載或自定義build好的packages&lt;/p&gt;

&lt;p&gt;staging =&amp;gt; 這資料包含一些研發工具，用來compile libraries and applications給target使用&lt;/p&gt;

&lt;p&gt;target =&amp;gt; 目標設備的root filesystem範本，依照手冊說明，不包含dev，因為make的時後並&lt;/p&gt;

&lt;p&gt;​                 不是用root啟動，這裡比較奇怪，我沒有下sudo make，可是target底下也是有dev這資料夾?&lt;/p&gt;

&lt;p&gt;​                  也有可能是之前有下過sudo make，而資料夾未被移除?&lt;/p&gt;

&lt;p&gt;host =&amp;gt; 主機上bulidroot所需的工具&lt;/p&gt;

&lt;p&gt;graphs =&amp;gt; 如果下make graph&lt;em&gt;-de&lt;/em&gt;pends等輔助指令，可產生package的相依性、生成的size、&lt;/p&gt;

&lt;p&gt;​                   build的時間等等資訊，會放在這個資料夾裡&lt;/p&gt;

&lt;h1 id=&quot;設定&quot;&gt;設定&lt;/h1&gt;

&lt;h2 id=&quot;cross-compilation-toolchain&quot;&gt;Cross-compilation toolchain:&lt;/h2&gt;

&lt;h3 id=&quot;buildroot-提供兩種toolchain設定&quot;&gt;Buildroot 提供兩種toolchain設定:&lt;/h3&gt;

&lt;h4 id=&quot;1-internal-toolchain-backend&quot;&gt;1. internal toolchain backend&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;使用Buildroot自帶的toolchain，支援uClibc-ng, glibc and musl，需選擇Linux kernel headers、&lt;/p&gt;

  &lt;p&gt;C Library、GCC compiler、binutils等工具和版本。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;2-external-toolchain-backend&quot;&gt;2. external toolchain backend&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;有三個方式可選:&lt;/p&gt;

  &lt;blockquote&gt;
    &lt;p&gt;(1) Use a predefined externel toolchain profilw&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;讓Buildroot去下載安裝&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;(2) Use a predefined externel toolchain profile&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;告訴Buildroot這toolchain放在系統那邊，不要去下載安裝&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;(3) Use a completely externel toolchain&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;通常這是指晶片商提供的toolchain，我們需要指定Toolchain path,Toolchain prefix and External toolchain C library。&lt;/p&gt;

      &lt;p&gt;一般而言會提供一個設定檔，執行這個檔案，例如 make XXXX_defconfig。再執行make menuconfig，會看到在menu&lt;/p&gt;

      &lt;p&gt;中已經設好了，唯一要手動的是，path和prefix。如果build的時後顯示找不到toolchain，大多是這兩個參數設錯。&lt;/p&gt;

      &lt;p&gt;&lt;strong&gt;例如:&lt;/strong&gt;
BR2_TOOLCHAIN_EXTERNAL_PATH=”/home/&lt;user&gt;/&lt;work directory=&quot;&quot;&gt;/armv7-marvell-linux-gnueabihf/&quot;&lt;/work&gt;&lt;/user&gt;&lt;/p&gt;

      &lt;p&gt;BR2_TOOLCHAIN_EXTERNAL_CUSTOM_PREFIX=”arm-marvell-linux-gnueabihf”&lt;/p&gt;

      &lt;p&gt;&lt;strong&gt;BusyBox:&lt;/strong&gt;
可用default的BusyBox設定或使用BR2_PACKAGE_BUSYBOX_CONFIG這個參數來讀取已定義好的設定。&lt;/p&gt;

      &lt;p&gt;也可使用 make busybox-menuconfig 來編輯BusyBox。&lt;/p&gt;

      &lt;p&gt;&lt;strong&gt;uClibc:&lt;/strong&gt;
和BusyBox類似，使用BR2_UCLIBC_CONFIG來讀取已定義好的設定。&lt;/p&gt;

      &lt;p&gt;也可使用 make uclibc-menuconfig 來編輯BusyBox。&lt;/p&gt;

      &lt;p&gt;&lt;strong&gt;Linux kernel:&lt;/strong&gt;
使用BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG來讀取已定義好的設定
使用BR2_LINUX_KERNEL_USE_DEFCONFIG來使用default值
使用 make linux-menuconfig 來編輯&lt;/p&gt;

      &lt;p&gt;&lt;strong&gt;Barebox:&lt;/strong&gt;
U-Boot二代，使用上和Linux kernel類似
使用BR2_LINUX_TARGET_BAREBOX_USE_CUSTOM_CONFIG來讀取已定義好的設定
使用BR2_LINUX_TARGET_BAREBOX_USE_DEFCONFIG來使用default值
使用 make barebox-menuconfig 來編輯&lt;/p&gt;

      &lt;p&gt;&lt;strong&gt;U-Boot:&lt;/strong&gt;
U-Boot板本要2015.04以上
使用BR2_LINUX_TARGET_UBOOT_USE_CUSTOM_CONFIG來讀取已定義好的設定
使用BR2_LINUX_TARGET_UBOOT_USE_DEFCONFIG來使用default值
使用 make uboot-menuconfig 來編輯&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="buildroot" /><category term="post" /><summary type="html">介紹 Buildroot是一簡化且自動化處理產生corss-compilation toolchain, root filesystem, Linux Kernel, bootloader的工具，便於開發embedded system。 Host: 主機、宿主，一般而言就是我們的PC、Notebook Target: 目標設備</summary></entry><entry><title type="html">HPLIP, SANE, CUPS, p910nd</title><link href="https://hsuehshihwang.github.io//2021/08/10/HPLIP,-SANE,-CUPS,-p910nd.html" rel="alternate" type="text/html" title="HPLIP, SANE, CUPS, p910nd" /><published>2021-08-10T14:52:00+08:00</published><updated>2021-08-10T14:52:00+08:00</updated><id>https://hsuehshihwang.github.io//2021/08/10/HPLIP,%20SANE,%20CUPS,%20p910nd</id><content type="html" xml:base="https://hsuehshihwang.github.io//2021/08/10/HPLIP,-SANE,-CUPS,-p910nd.html">&lt;p&gt;&lt;strong&gt;介紹：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HPLIP是HP針對HP掃描器、印表機提供的Linux OpenSource驅動程式組合包。&lt;/li&gt;
  &lt;li&gt;SANE是Linux上的掃描器的軟體，裡面包含了網路掃描、掃描的前端軟體介面、掃描器驅動程式。&lt;/li&gt;
  &lt;li&gt;CUPS、p910nd都是Linux上的列印伺服器，p910nd是non-spooling的列印伺服器，CUPS則是spooling伺服器。&lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;strong&gt;p910nd與CUPS區別和兩者架構：&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;p910nd：&lt;/strong&gt;&lt;br /&gt;
參考：&lt;br /&gt;
&lt;a href=&quot;http://digiland.tw/viewtopic.php?id=926&quot;&gt;[Oleg/Lly/CDMA@wifi] p910nd 列印伺服器(無spool)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;從參考的作者文中可以知道，&lt;br /&gt;
p910nd的安裝，主要2個步驟：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;確定Linux Kernel內USB Printer有支援&lt;/li&gt;
  &lt;li&gt;p910nd daemon有啟動，並指定Port、USB Printer的Device File&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;步驟完成，p910nd就會動了，而且p910nd需求極小，&lt;br /&gt;
幾乎沒有相依太多library就能動作。&lt;/p&gt;

&lt;p&gt;再看看下面這個參考：&lt;br /&gt;
&lt;a href=&quot;http://www.dd-wrt.com/wiki/index.php/Printer_Sharing#Workstation_setup&quot;&gt;DD-WRT Printer Sharing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;裡面描述了p910nd安裝外，也描述了Client端的安裝，&lt;br /&gt;
包括CUPS、Linux、Windows、MacOSX的安裝介紹。&lt;/p&gt;

&lt;p&gt;簡單白話的說，&lt;br /&gt;
p910nd本身只是USB&amp;lt;-&amp;gt;Socket的轉譯器，&lt;br /&gt;
它不負責印表機溝通，從Socket來的資料直接轉入USB當中，&lt;br /&gt;
因此所有印表機的溝通，列印資料的轉譯，都要由Client端負責，&lt;br /&gt;
印表機工作的排程，則要由印表機自己負責。&lt;/p&gt;

&lt;p&gt;因此p910nd優點是library相依性低，也不需要複雜的額外工作，&lt;br /&gt;
至於Client端，&lt;br /&gt;
Windows直接有原廠的驅動程式，&lt;br /&gt;
Linux直接有CUPS搭配HPLIP就能達成，&lt;br /&gt;
macOSX看起來也是有驅動程式，目前試驗HP不行。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CUPS：&lt;/strong&gt;&lt;br /&gt;
直接看系統方塊圖(&lt;a href=&quot;http://en.wikipedia.org/wiki/CUPS&quot;&gt;wiki&lt;/a&gt;)：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-KiPXp0m60S4/VLE7OhJgIrI/AAAAAAAAD9c/bSeV9oIOVyA/s1600/CUPS-block-diagram.png&quot;&gt;&lt;img src=&quot;http://1.bp.blogspot.com/-KiPXp0m60S4/VLE7OhJgIrI/AAAAAAAAD9c/bSeV9oIOVyA/s1600/CUPS-block-diagram.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CUPS是一整套完整的列印伺服器程式，&lt;br /&gt;
裡面包含了使用者管理、列印語言轉譯、列印Queue、網路列印…等多個功能。&lt;/p&gt;

&lt;p&gt;我們單從CUPS的系統方塊圖來看，&lt;br /&gt;
它前面提供了各種檔案格式的轉譯器，轉譯成PostScript，&lt;br /&gt;
中間能將PostScript轉譯成各種列印語言，像是PCL…等，&lt;br /&gt;
後面CUPS backend又能串接包括本機的USB、SerialPort…等，網路的IPP、網路芳鄰、AppleTalk…等網路介面。&lt;/p&gt;

&lt;p&gt;因此可以知道它是非常龐大的列印系統，&lt;br /&gt;
從前端應用程式的檔案開始，就一路透過它層層處理，最後一樣透過它送到印表機上。&lt;/p&gt;

&lt;p&gt;優點當然是系統功能完整，但缺點就是相依的library多，&lt;br /&gt;
程式的設定項目多比較複雜，&lt;br /&gt;
在小型系統上就比較不方便移植，&lt;br /&gt;
因此比較早期的OpenWRT、DD-WRT都只支援p910nd，&lt;/p&gt;

&lt;p&gt;較新的版本則已經有提供cups，&lt;/p&gt;

&lt;p&gt;自行移植則會遇到比較多的編譯問題，我自己最後編譯出來，執行後，網頁點幾下還是會segfault。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SANE：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;SANE是Linux上最主要的掃描器解決方案，可能也是唯一的解決方案，&lt;/p&gt;

&lt;p&gt;有支援Linux的掃描器，大概都是提供SANE的驅動程式。&lt;/p&gt;

&lt;p&gt;SANE分前端(frontend)和後端(backend)，&lt;/p&gt;

&lt;p&gt;SANE frontend主要提供給應用程式，送掃描動作給SANE；&lt;/p&gt;

&lt;p&gt;SANE backend主要就是SANE介面界接掃描器的驅動程式。&lt;/p&gt;

&lt;p&gt;SANE有提供一個特別的SANE frontend，叫做net，&lt;/p&gt;

&lt;p&gt;它能讓SANE能透過網路接收SANE的掃描動作，達成網路控制掃描器掃描。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HPLIP：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;前面提這麼多，原因是HPLIP相依的東西很多，&lt;/p&gt;

&lt;p&gt;上述幾個是最關鍵的幾個。&lt;/p&gt;

&lt;p&gt;參考：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hplipopensource.com/node/128&quot;&gt;HPLIP Technical Overview&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;直接看參考中的系統方塊圖：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hplip.sourceforge.net/images/hplip_architecture.png&quot;&gt;&lt;img src=&quot;http://hplip.sourceforge.net/images/hplip_architecture.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;拆開來看HPLIP各項元件，我們先只看掃描器部份，看hp-scan那個垂直的部份。&lt;/p&gt;

&lt;p&gt;在HPLIP中，HP的掃描器是透過SANE支援的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;hp-scan：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;hp-scan是HPLIP提供的掃描器工具程式，但hp-scan實際上是個SANE frontend，&lt;/p&gt;

&lt;p&gt;就是透過SANE backend掃描。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;libsane-hpaio：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;HPLIP提供了libsane-hpaio這個SANE backend用的延伸library，&lt;/p&gt;

&lt;p&gt;libsane-hpaio讓SANE backend透過它來操作HP掃描器，&lt;/p&gt;

&lt;p&gt;我不很確定裡面有沒有包含驅動程式，或是否有包含部份的驅動程式，&lt;/p&gt;

&lt;p&gt;但這個library非常重要，SANE需要靠它才能操作HP掃描器，&lt;/p&gt;

&lt;p&gt;在SANE中，它被稱為hpaio的SANE backend。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;hpmud：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;HPLIP實際操作HP印表機、掃描器的I/O library，&lt;/p&gt;

&lt;p&gt;所有的工作都透過這個library傳遞給USB或網路(網路印表機、網路掃描器時)，&lt;/p&gt;

&lt;p&gt;它的下層，就是USB library或Socket，直接連結印表機、掃描器。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D-Bus：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;掃描器這路看完後，我們來看D-BUS。&lt;/p&gt;

&lt;p&gt;在HPLIP中，各個應用程式和元件間溝通都是透過D-BUS，&lt;/p&gt;

&lt;p&gt;這些應用程式包括掃描器左邊那幾個小顆的，&lt;/p&gt;

&lt;p&gt;包括hp-systray、hp-toolbox、hp-sendfax這幾個工具程式，&lt;/p&gt;

&lt;p&gt;還有libsane-hpaio這個SANE backend。&lt;/p&gt;

&lt;p&gt;這些元件和程式的溝通都透過D-Bus，&lt;/p&gt;

&lt;p&gt;而D-Bus本身在HPLIP則是透過hp/hpfax backend管理。&lt;/p&gt;

&lt;p&gt;關於D-Bus，這邊不多介紹，簡單的說，它是Linux上IPC的一種，&lt;/p&gt;

&lt;p&gt;各應用程式可以透過D-Bus互相溝通，&lt;/p&gt;

&lt;p&gt;典型的例子是，播放程式透過D-Bus提供出播放音樂的資訊，&lt;/p&gt;

&lt;p&gt;Skype這類的通訊軟體透過D-Bus可以得到並顯示你正在播放的音樂資訊。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;部份總結：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;到目前為止，&lt;/p&gt;

&lt;p&gt;先整理下HPLIP做了什麼？搞了哪些元件？要在小系統上編譯，需要編譯哪些東西？&lt;/p&gt;

&lt;p&gt;1.&lt;/p&gt;

&lt;p&gt;HPLIP最核心的I/O主要是hpmud，負責最終和硬體通訊&lt;/p&gt;

&lt;p&gt;2.&lt;/p&gt;

&lt;p&gt;HPLIP使用SANE做為掃描器核心，要能掃描，除了SANE要ok之外，&lt;/p&gt;

&lt;p&gt;hpaio backend要確定ok，並有放置在SANE backend的目錄內&lt;/p&gt;

&lt;p&gt;3.&lt;/p&gt;

&lt;p&gt;hp-scan只是個SANE frontend，不用管它，用其他SANE程式效果一樣&lt;/p&gt;

&lt;p&gt;4.&lt;/p&gt;

&lt;p&gt;D-Bus在HPLIP是各程式的溝通平台，單純使用掃描功能，不用管它&lt;/p&gt;

&lt;p&gt;5.&lt;/p&gt;

&lt;p&gt;如果搭配p910nd，到目前為止的資訊已經足夠了，其他元件都只跟列印和CUPS相關&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HPLIP與CUPS：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;前面CUPS提到，CUPS架構很大，CUPS中間有許多轉譯器提供各種轉譯，&lt;/p&gt;

&lt;p&gt;HPLIP針對CUPS實做了hpcups、hpcupsfax…等幾個轉譯器，&lt;/p&gt;

&lt;p&gt;接收了從CUPS收到的列印資料(應該是PostScript)後，&lt;/p&gt;

&lt;p&gt;透過這些轉譯器轉譯，送給hp/hpfax backend，再透過hpmud送到印表機。&lt;/p&gt;

&lt;p&gt;這裡我比較不清楚的地方是，&lt;/p&gt;

&lt;p&gt;轉譯器轉譯後，是直接在轉譯器內送到hp/hpfax backend，&lt;/p&gt;

&lt;p&gt;還是轉譯器轉譯後，回到CUPS，再由CUPS送到hp/hpfax backend進行列印，&lt;/p&gt;

&lt;p&gt;這是圖上沒有表示的部份。&lt;/p&gt;</content><author><name></name></author><category term="usb" /><category term="printer" /><category term="post" /><summary type="html">介紹： HPLIP是HP針對HP掃描器、印表機提供的Linux OpenSource驅動程式組合包。 SANE是Linux上的掃描器的軟體，裡面包含了網路掃描、掃描的前端軟體介面、掃描器驅動程式。 CUPS、p910nd都是Linux上的列印伺服器，p910nd是non-spooling的列印伺服器，CUPS則是spooling伺服器。</summary></entry><entry><title type="html">Linux Device Model 三角關係</title><link href="https://hsuehshihwang.github.io//2021/08/10/Linux-Device-Model-%E4%B8%89%E8%A7%92%E9%97%9C%E4%BF%82.html" rel="alternate" type="text/html" title="Linux Device Model 三角關係" /><published>2021-08-10T00:00:00+08:00</published><updated>2021-08-10T00:00:00+08:00</updated><id>https://hsuehshihwang.github.io//2021/08/10/Linux%20Device%20Model%20%E4%B8%89%E8%A7%92%E9%97%9C%E4%BF%82</id><content type="html" xml:base="https://hsuehshihwang.github.io//2021/08/10/Linux-Device-Model-%E4%B8%89%E8%A7%92%E9%97%9C%E4%BF%82.html">&lt;p&gt;原文出處：https://www.cntofu.com/book/46/linux_driver/linux_device_model.md&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://img.cntofu.com/book/note/linux_driver/images/1343287430_3988.PNG&quot;&gt;&lt;img src=&quot;https://img.cntofu.com/book/note/linux_driver/images/1343287430_3988.PNG&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;!--more--&gt;
&lt;p&gt;Linux Device Model由bus, device, driver所組成。其關係為: bus是cpu與device溝通的橋樑，而driver賦與device行為的能力。因此有人說，device是男人，driver是女人，而bus則是媒人。媒人有match的功能，讓男人與女人彼此 認識。在coldplug的時代，男人先登記後，由媒人去match女人。而後來的hotplug，則讓女人先提供資訊，讓後來有意願的男人match。 device與driver對bus而言，就沒有一定誰先誰後了。&lt;/p&gt;

&lt;h3 id=&quot;基礎&quot;&gt;基礎&lt;/h3&gt;

&lt;p&gt;kobject做為LDM的最基本結構，提供了reference count (kref)、sysfs的dirent和hotplug相的的event等其他屬性。bus, device, driver都會是一個kobject，意即其struct都內含一個kobject。&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linux&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kobject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kobject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list_head&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kobject&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kset&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kobj_type&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ktype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sysfs_dirent&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kref&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;kref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state_initialized&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state_in_sysfs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state_add_uevent_sent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state_remove_uevent_sent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uevent_suppress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;kset理解為kobject的集合。可以想像為pci bus是一個kset，而掛在pci bus上的一個個device / driver的kobject為其成員。&lt;/p&gt;

&lt;h3 id=&quot;結構&quot;&gt;結構&lt;/h3&gt;

&lt;p&gt;include/linux/device.h&lt;/p&gt;

&lt;h3 id=&quot;先看bus&quot;&gt;先看bus&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus_type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus_attribute&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bus_attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device_attribute&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev_attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;driver_attribute&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drv_attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device_driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uevent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kobj_uevent_env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;probe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shutdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suspend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pm_message_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dev_pm_ops&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus_type_private&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//2.6.19後把device和driver包在新的struct&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus_type_private&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kset&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subsys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//代表自己，而kset本身也是一種kobject&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drivers_kset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//該bus的driver集合&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devices_kset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//該bus的 device集合&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klist&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klist_devices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klist&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klist_drivers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blocking_notifier_head&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus_notifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drivers_autoprobe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;再來是device&quot;&gt;再來是device&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device_private&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kobject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kobj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* initial name of the device */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device_type&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutex&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;mutex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* mutex to synchronize calls to its driver.*/&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus_type&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;        &lt;span class=&quot;cm&quot;&gt;/* type of bus device is on */&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//指定要掛在哪條bus&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device_driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* which driver has allocated this  //該device所 bind的driver device */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;platform_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* Platform specific data, device core doesn't touch it */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dev_pm_info&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;power&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/*...............*/&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;最後是driver&quot;&gt;最後是driver&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device_driver&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus_type&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//一樣是用來指定要去哪條bus做 match&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* used for built-in modules */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;suppress_bind_attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* disables bind/unbind via sysfs */&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#if defined(CONFIG_OF)
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of_device_id&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;of_match_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif
&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;probe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shutdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suspend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pm_message_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attribute_group&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dev_pm_ops&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;driver_private&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//kobject在這&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;driver_private&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kobject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kobj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klist&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klist_devices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//該driver能支援的device列表&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klist_node&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;knode_bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;module_kobject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mkobj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device_driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;基本上這就是LDM三個主角的結構。拿pci driver當例子&lt;/p&gt;

&lt;p&gt;drivers/pci/pci-driver.c&lt;/p&gt;

&lt;h3 id=&quot;bus的部分&quot;&gt;bus的部分&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus_type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_bus_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;pci&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_bus_match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uevent&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_uevent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;probe&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_device_probe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_device_remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shutdown&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_device_shutdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev_attrs&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_dev_attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bus_attrs&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_bus_attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pm&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PCI_PM_OPS_PTR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;宣告了pci bus及其屬性。&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__init&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pci_driver_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus_register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pci_bus_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;postcore_initcall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pci_driver_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;__init macro表示在開機時會作初始化，即do_basic_setup時，其level是在postcore，細節可參考include/linux /init.h&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define pure_initcall(fn)        __define_initcall(&quot;0&quot;,fn,0)
#define core_initcall(fn)        __define_initcall(&quot;1&quot;,fn,1)
#define core_initcall_sync(fn)        __define_initcall(&quot;1s&quot;,fn,1s)
#define postcore_initcall(fn)        __define_initcall(&quot;2&quot;,fn,2)
#define postcore_initcall_sync(fn)    __define_initcall(&quot;2s&quot;,fn,2s)
#define arch_initcall(fn)        __define_initcall(&quot;3&quot;,fn,3)
#define arch_initcall_sync(fn)        __define_initcall(&quot;3s&quot;,fn,3s)
#define subsys_initcall(fn)        __define_initcall(&quot;4&quot;,fn,4)
#define subsys_initcall_sync(fn)    __define_initcall(&quot;4s&quot;,fn,4s)
#define fs_initcall(fn)            __define_initcall(&quot;5&quot;,fn,5)
#define fs_initcall_sync(fn)        __define_initcall(&quot;5s&quot;,fn,5s)
#define rootfs_initcall(fn)        __define_initcall(&quot;rootfs&quot;,fn,rootfs)
#define device_initcall(fn)        __define_initcall(&quot;6&quot;,fn,6)
#define device_initcall_sync(fn)    __define_initcall(&quot;6s&quot;,fn,6s)
#define late_initcall(fn)        __define_initcall(&quot;7&quot;,fn,7)
#define late_initcall_sync(fn)        __define_initcall(&quot;7s&quot;,fn,7s)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;再來就是其module_init，可看到最後是執行了bus_register(&amp;amp;pci_bus_type)，節錄如下:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bus_register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*...............*/&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kobject_set_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subsys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kobj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*...............*/&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kset_register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subsys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus_create_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bus_attr_uevent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus_uevent_fail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devices_kset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kset_create_and_add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;devices&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                         &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subsys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kobj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devices_kset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add_probe_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ENOMEM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus_devices_fail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drivers_kset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kset_create_and_add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;drivers&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                         &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subsys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kobj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/*...............*/&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add_probe_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/*...............*/&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;這其中包括建立sysfs下的file，可看出devices及drivers兩個資料夾。而後的add_probe_files則是sysfs下更detail的部份。&lt;/p&gt;

&lt;p&gt;這樣的結果就是在/sys/bus/下會多出一個pci的folder。之後就是kernel scan到devices/ drivers時，再加入/sys/bus/pci/devices/及/sys/bus/pci/drivers/。&lt;/p&gt;

&lt;h3 id=&quot;再來是device-1&quot;&gt;再來是device&lt;/h3&gt;

&lt;p&gt;drivers/pci/pci.h&lt;/p&gt;

&lt;p&gt;這其實是再封裝了include/linux/device.h裡的struct device，加上了自定的其他屬性&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_dev&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list_head&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* node in per-bus list */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_bus&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;        &lt;span class=&quot;cm&quot;&gt;/* bus this device is on */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_bus&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subordinate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* bus this device bridges to */&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sysdata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* hook for sys-specific extension */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proc_dir_entry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;procent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* device entry in /proc/bus/pci */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_slot&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;        &lt;span class=&quot;cm&quot;&gt;/* Physical slot this device is in */&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;devfn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;        &lt;span class=&quot;cm&quot;&gt;/* encoded device &amp;amp; function index */&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//該device的id資訊，將來跟driver用來 match&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;vendor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;subsystem_vendor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;subsystem_device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;        &lt;span class=&quot;cm&quot;&gt;/* 3 bytes: (base,sub,prog-if) */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;u8&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;revision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* PCI revision, low byte of class word */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;u8&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;hdr_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* PCI header type (`multi' flag masked out) */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;u8&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;pcie_cap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* PCI-E capability offset */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;u8&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;pcie_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* PCI-E device/port type */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;u8&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;rom_base_reg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* which config register controls the ROM */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;u8&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;pin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;          &lt;span class=&quot;cm&quot;&gt;/* which interrupt pin this device uses */&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* which driver has allocated this device */&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//match到則用device_bind_driver(dev)，即不為NULL&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/*...............*/&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;        &lt;span class=&quot;cm&quot;&gt;/* Generic device interface */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;cfg_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* Size of configuration space */&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/*
     * Instead of touching interrupt line and base address registers
     * directly, use the values stored here. They might be different!
     */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;irq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DEVICE_COUNT_RESOURCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* I/O and memory regions + expansion ROMs */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;resource_size_t&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;fw_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DEVICE_COUNT_RESOURCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* FW-assigned addr */&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//其他自定屬性&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* These fields are used by common fixups */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;transparent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* Transparent PCI bridge */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;multifunction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* Part of multi-function device */&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* keep track of device state */&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_device_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* must be non-NULL for probe to be called */&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;is_added&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;is_busmaster&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* device is busmaster */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;no_msi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* device may not use msi */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;block_ucfg_access&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* userspace config space access is blocked */&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/*...............*/&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;最後是pci_driver&quot;&gt;最後是pci_driver&lt;/h3&gt;

&lt;p&gt;跟pci_dev一樣，再次封裝struct device_driver&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_driver&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list_head&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_device_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* must be non-NULL for probe to be called */&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//內含其支援的device id資訊，將來match時用的&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;probe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_dev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_device_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* New device inserted */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_dev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* Device removed (NULL if not a hot-plug capable driver) */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suspend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_dev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pm_message_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* Device suspended */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suspend_late&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_dev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pm_message_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resume_early&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_dev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_dev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                    &lt;span class=&quot;cm&quot;&gt;/* Device woken up */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shutdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_dev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_error_handlers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device_driver&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pci_dynids&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dynids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;以上是LDM的結構，再來要看看範例以及device/driver的註冊過程。&lt;/p&gt;

&lt;p&gt;Reference&lt;/p&gt;

&lt;p&gt;高茂林&lt;/p&gt;</content><author><name></name></author><category term="kernel" /><category term="driver" /><summary type="html">原文出處：https://www.cntofu.com/book/46/linux_driver/linux_device_model.md</summary></entry><entry><title type="html">USB的種類(OHCI、UHCI、EHCI、XHCI)</title><link href="https://hsuehshihwang.github.io//2021/08/09/USB%E7%9A%84%E7%A8%AE%E9%A1%9E(OHCI-UHCI-EHCI-XHCI).html" rel="alternate" type="text/html" title="USB的種類(OHCI、UHCI、EHCI、XHCI)" /><published>2021-08-09T11:34:00+08:00</published><updated>2021-08-09T11:34:00+08:00</updated><id>https://hsuehshihwang.github.io//2021/08/09/USB%E7%9A%84%E7%A8%AE%E9%A1%9E(OHCI%E3%80%81UHCI%E3%80%81EHCI%E3%80%81XHCI)</id><content type="html" xml:base="https://hsuehshihwang.github.io//2021/08/09/USB%E7%9A%84%E7%A8%AE%E9%A1%9E(OHCI-UHCI-EHCI-XHCI).html">&lt;h3 id=&quot;usb的種類ohciuhciehcixhci&quot;&gt;USB的種類(OHCI、UHCI、EHCI、XHCI)&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;USB(Universal Serial Bus)&lt;/em&gt;&lt;/strong&gt;通用串列匯流排：USB1.1規格支援兩種速率：低速(low speed)1.5Mbps和全速(full speed)12Mbps.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;USB2.0&lt;/em&gt;&lt;/strong&gt;規格除了支援原有的兩種速度外，還額外支援高速(high speed)480Mbps。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;USB3.0&lt;/em&gt;&lt;/strong&gt;支援全雙工，比USB 2.0多了數個觸點，並採用發送列表區段來進行資料發包。USB 3.0暫定的供電標準為900mA，且理論上有支援光纖傳輸的潛力。USB 3.0設計的「Super Speed」傳輸速度為5Gbit/s，理論資料傳輸速度為625MByte/s。&lt;/p&gt;

&lt;p&gt;OHCI、UHCI都是USB1.1的介面標準，而EHCI是對應USB2.0的介面標準，最新的xHC則是USB3.0的介面標準。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;em&gt;OHCI（Open Host Controller Interface）&lt;/em&gt;&lt;/strong&gt;是支援&lt;strong&gt;USB1.1&lt;/strong&gt;的標準，但它不僅僅是針對USB，還支援其他的一些介面，比如它還支援Apple的火線（Firewire，IEEE 1394）介面。與UHCI相比，OHCI的硬體複雜，硬體做的事情更多，所以實現對應的軟體驅動的任務，就相對較簡單。主要用於非x86的USB，如擴展卡、嵌入式開發板的USB主控。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;em&gt;UHCI（Universal Host Controller Interface）&lt;/em&gt;&lt;/strong&gt;，&lt;strong&gt;&lt;em&gt;是Intel主導的對USB1.0、1.1的介面標準&lt;/em&gt;&lt;/strong&gt;，與OHCI不相容。UHCI的軟體驅動的任務重，需要做得比較複雜，但可以使用較便宜、較簡單的硬體的USB控制器。Intel和VIA使用UHCI，而其餘的硬體提供商使用OHCI。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;3. &lt;strong&gt;&lt;em&gt;EHCI（Enhanced Host Controller Interface）&lt;/em&gt;&lt;/strong&gt;，是Intel主導的&lt;strong&gt;&lt;em&gt;USB2.0&lt;/em&gt;&lt;/strong&gt;的介面標準。EHCI僅提供USB2.0的高速功能，而依靠UHCI或OHCI來提供對全速（full-speed）或低速（low-speed）設備的支援。&lt;/p&gt;

&lt;p&gt;4. &lt;strong&gt;&lt;em&gt;xHCI（eXtensible Host Controller Interface）&lt;/em&gt;&lt;/strong&gt;，是最新最火的&lt;strong&gt;&lt;em&gt;USB3.0&lt;/em&gt;&lt;/strong&gt;的介面標準，它在速度、節能、虛擬化等方面都比前面3中有了較大的提高。xHCI 支援所有種類速度的USB設備（USB 3.0 SuperSpeed, USB 2.0 High-speed, USB 1.1 Low-speed and Full-speed）。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;USB1.1 —&amp;gt; (Low-Speed and Full-Speed)&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;USB2.0 —&amp;gt; High Speed&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;USB3.0 —&amp;gt; Super Speed&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="usb" /><category term="post" /><summary type="html">USB的種類(OHCI、UHCI、EHCI、XHCI) USB(Universal Serial Bus)通用串列匯流排：USB1.1規格支援兩種速率：低速(low speed)1.5Mbps和全速(full speed)12Mbps.</summary></entry><entry><title type="html">Ralph Test 2!</title><link href="https://hsuehshihwang.github.io//test/post/2021/08/06/test2-001.html" rel="alternate" type="text/html" title="Ralph Test 2!" /><published>2021-08-06T15:17:00+08:00</published><updated>2021-08-06T15:17:00+08:00</updated><id>https://hsuehshihwang.github.io//test/post/2021/08/06/test2-001</id><content type="html" xml:base="https://hsuehshihwang.github.io//test/post/2021/08/06/test2-001.html">&lt;p&gt;Ralph Test 2 Content&lt;/p&gt;</content><author><name></name></author><category term="test" /><category term="post" /><category term="test" /><category term="post" /><summary type="html">Ralph Test 2 Content</summary></entry><entry><title type="html">Ralph Test!</title><link href="https://hsuehshihwang.github.io//test/post/2021/08/06/test.html" rel="alternate" type="text/html" title="Ralph Test!" /><published>2021-08-06T15:16:00+08:00</published><updated>2021-08-06T15:16:00+08:00</updated><id>https://hsuehshihwang.github.io//test/post/2021/08/06/test</id><content type="html" xml:base="https://hsuehshihwang.github.io//test/post/2021/08/06/test.html">&lt;p&gt;Ralph Test Content&lt;/p&gt;

&lt;p&gt;title_variable: example  &lt;br /&gt;
test: Welcome to example
&lt;!--more--&gt;&lt;/p&gt;</content><author><name>Ralph Wang</name></author><category term="test" /><category term="post" /><category term="test" /><category term="post" /><summary type="html">Ralph Test Content title_variable: example test: Welcome to example</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="https://hsuehshihwang.github.io//jekyll/update/2021/08/06/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2021-08-06T15:14:18+08:00</published><updated>2021-08-06T15:14:18+08:00</updated><id>https://hsuehshihwang.github.io//jekyll/update/2021/08/06/welcome-to-jekyll</id><content type="html" xml:base="https://hsuehshihwang.github.io//jekyll/update/2021/08/06/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated. Jekyll requires blog post files to be named according to the following format:</summary></entry></feed>